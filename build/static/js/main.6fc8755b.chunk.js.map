{"version":3,"sources":["random.js","Camera.js","util/MathUtil.js","Controller.js","GameObject.js","Entity.js","InputManager.js","ParticleSystem.js","Animation.js","Player.js","Render.js","ImageEffects.js","SpriteSheet.js","Sprite.js","SpriteSheetManager.js","Game.js","data/SpriteSheets.js","App.js","reportWebVitals.js","index.js"],"names":["getRandom","min","max","Math","random","getRandomInteger","floor","Camera","game","this","startX","startY","endX","endY","mut","followingObject","followSpeed","followX","followY","minX","minY","maxX","maxY","shakeTick","shakeMagnitude","calculateMultiplier","tick","magnitude","delta","followingCenter","getCenter","cameraCenter","getHeight","getWidth","diffX","diffY","abs","move","dim","newCenter","speed","x1","y1","x2","y2","y","x","sqrt","getDistance","setPositionCenter","maintainHeight","viewport","getViewport","height","newWidth","setPositionCenterAndSize","width","newHeight","scalar","centerX","centerY","cameraMax","center","transform","w","h","transformCoordinates","transformX","transformY","Controller","controlling","player","onGround","inputManager","isKeyDown","crouch","left","right","animation","disableController","facing","running","crouchValue","ledgeHang","slide","animationName","idle","setCrouch","isKeyPressed","jump","isMousePressed","attack","groundSlam","knockback","showInfo","camera","scaleSize","levelWidth","map","rows","i","length","convertIndexToCoordinates","push","newMap","collisionMap","createCollisionMap","GameObject","velocityX","velocityY","colliding","delete","top","bottom","isNegative","amount","force","tiles","Set","_x","_y","_index","convertCoordinatesToIndex","add","setX","setGroundY","groundY","horizontalCollide","horizontalFlag","Array","from","index","block","collidesWith","side","calculateOverlap","getBottom","flag","setBottom","getTop","setTop","setAnimation","other","overrideThis","rect1","rect2","r1","r2","dx","dy","crossWidth","crossHeight","collision","Entity","direction","render","drawRect","particleSystem","spawnParticles","shake","InputManager","keyboard","Object","create","keypress","mouse","mousePress","mousePos","mouseMoved","events","eventName","cb","window","addEventListener","e","handleKeyEvent","key","handleMouseEvent","button","pageX","pageY","forEach","event","removeEventListener","str","parseInt","char","keyCode","toString","toLowerCase","output","mouseToButton","state","ParticleSystem","particles","sizeScale","realAmount","angle","PI","cos","sin","size","ticks","vx","vy","alpha","particle","ctx","globalAlpha","deleting","unshift","splice","Animation","sprite","frames","after","xOffset","yOffset","Player","defaultSize","gravityTick","lastLandY","animations","look_up","run","fall","land","slide_transition","roll","attack1","attack2","attack3","attack4","ground_slam","ground_slam_transition","ledge_climb","ledge_hang","wall_jump","crawl","value","fixSize","Error","oldAnimation","animationTick","setTimeout","done","frame","drawSprite","effects","isArray","wasOnGround","levelHeight","Render","strokeWidth","color","strokeStyle","beginPath","moveTo","lineTo","lineWidth","stroke","closePath","fillStyle","fillRect","transformRect","r","arc","fill","spriteInfo","ssm","getSpriteFromInfoObject","drawScalingSprite","aspectRatio","passedAspectRatio","toFixed","JSON","stringify","drawImage","spriteSheet","image","img","sx","sy","sw","sh","round","_w","_h","rotateDegrees","context","angleInRadians","translate","rotate","text","fontSize","font","fillText","ImageEffects","canvas","document","createElement","getContext","a","spriteName","images","Map","clonedSprites","sprites","clonedSprite","Sprite","firstImage","has","get","set","SpriteSheet","applyEffectsToImage","type","topLevel","keys","newImage","newSpriteSheet","currentImage","effect","applyEffectToImage","Promise","resolve","reject","effectName","name","clearRect","flipHorizontally","teamColor","payload","outputImage","Image","dataURL","toDataURL","src","onload","loaded","join","globalCompositeOperation","scale","setTransform","imgPath","info","spriteSheetManager","isTopLevel","SpriteSheetManager","effectsCache","creating","console","log","incrementLoaded","border","imageWidth","imageHeight","prefix","split","includes","newImageSRC","childSprite","indirect","imageEffects","applyEffectsToSpriteSheet","spriteSheets","assetsLoaded","assetsTotal","hasLoaded","onLoaded","ss","spriteSheetName","path","getSpriteSheet","getSprite","getEffects","Game","controller","entities","level","flat","spawnTick","fpsTick","fps","end","id","v4","entity","start","entityUUID","collisionFlag","drawText","tileKeys","tile","spawnEntity","update","deleteUUIDs","SpriteSheets","player_idle","player_run","player_jump","player_land","player_slide","player_roll","player_combat_combo_01_attack_01","player_combat_combo_01_attack_02","player_combat_combo_01_attack_03","player_combat_combo_01_attack_04","player_combat_ground_slam","player_look_up","player_knockback","player_ledge_climb","player_ledge_hang","player_wall_jump","player_wall_slide","player_crouch","player_crawl","player_front_flip","App","canvasRef","useRef","useState","menu","setMenu","gameRef","useEffect","data","addSpriteSheet","current","last","performance","now","innerWidth","innerHeight","style","updateAspectRatio","active","cancelAnimationFrame","updateGame","renderGame","requestAnimationFrame","className","onClick","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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AAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3C,C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","file":"static/js/main.6fc8755b.chunk.js","sourcesContent":["export function getRandom(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nexport function getRandomInteger(min, max) {\r\n  return Math.floor(getRandom(min, max));\r\n}\r\n","import Game from \"./Game\";\r\nimport { getRandom } from \"./random\";\r\nimport { getDistance } from \"./util/MathUtil\";\r\n\r\nexport default class Camera {\r\n  /**\r\n   *\r\n   * @param {Game} game\r\n   */\r\n  constructor(game) {\r\n    this.game = game;\r\n    this.startX = 0;\r\n    this.startY = 0;\r\n    this.endX = 16;\r\n    this.endY = 11;\r\n\r\n    this.mut = [1, 1];\r\n    this.followingObject = null;\r\n    this.followSpeed = 2;\r\n    this.followX = true;\r\n    this.followY = true;\r\n\r\n    this.minX = null;\r\n    this.minY = null;\r\n\r\n    this.maxX = null;\r\n    this.maxY = null;\r\n\r\n    this.shakeTick = 0;\r\n    this.shakeMagnitude = 1;\r\n\r\n    this.calculateMultiplier();\r\n  }\r\n\r\n  shake(tick = 0.3, magnitude = 1) {\r\n    this.shakeTick = tick;\r\n    this.shakeMagnitude = magnitude;\r\n  }\r\n\r\n  update(delta) {\r\n    if (this.followingObject) {\r\n      var followingCenter = this.followingObject.getCenter();\r\n      var cameraCenter = this.getCenter();\r\n\r\n      if (typeof this.maxY === \"number\") {\r\n        followingCenter[1] = Math.min(\r\n          this.maxY - this.getHeight() / 2,\r\n          followingCenter[1]\r\n        );\r\n      }\r\n\r\n      if (typeof this.minX === \"number\") {\r\n        followingCenter[0] = Math.max(\r\n          this.minX + this.getWidth() / 2,\r\n          followingCenter[0]\r\n        );\r\n      }\r\n\r\n      var diffX = followingCenter[0] - cameraCenter[0];\r\n      var diffY = followingCenter[1] - cameraCenter[1];\r\n\r\n      if (Math.abs(diffX) > 0.01 || Math.abs(diffY) > 0.01) {\r\n        var newCenter = [cameraCenter[0], cameraCenter[1]];\r\n        var speed =\r\n          getDistance(\r\n            followingCenter[0],\r\n            followingCenter[1],\r\n            cameraCenter[0],\r\n            cameraCenter[1]\r\n          ) *\r\n          delta *\r\n          this.followSpeed;\r\n\r\n        function move(dim) {\r\n          if (newCenter[dim] < followingCenter[dim]) {\r\n            if (newCenter[dim] + speed < followingCenter[dim]) {\r\n              newCenter[dim] += speed;\r\n            } else {\r\n              newCenter[dim] = followingCenter[dim];\r\n            }\r\n          } else if (newCenter[dim] > followingCenter[dim]) {\r\n            if (newCenter[dim] - speed > followingCenter[dim]) {\r\n              newCenter[dim] -= speed;\r\n            } else {\r\n              newCenter[dim] = followingCenter[dim];\r\n            }\r\n          }\r\n        }\r\n\r\n        if (Math.abs(diffX) > 0.1 && this.followX) {\r\n          move(0);\r\n        }\r\n\r\n        if (Math.abs(diffY) > 0.1 && this.followY) {\r\n          move(1);\r\n        }\r\n\r\n        if (this.shakeTick > 0) {\r\n          this.shakeTick -= delta;\r\n\r\n          newCenter[0] += (getRandom(-1, 1) / 100) * this.shakeMagnitude;\r\n          newCenter[1] += (getRandom(-1, 1) / 100) * this.shakeMagnitude;\r\n        }\r\n\r\n        this.setPositionCenter(newCenter[0], newCenter[1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateAspectRatio(maintainHeight = true) {\r\n    var viewport = this.game.getViewport();\r\n\r\n    if (maintainHeight) {\r\n      var height = this.getHeight();\r\n\r\n      var newWidth = height * (viewport[0] / viewport[1]);\r\n\r\n      this.setPositionCenterAndSize(...this.getCenter(), newWidth, height);\r\n    } else {\r\n      var width = this.getWidth();\r\n      var newHeight = width * (viewport[1] / viewport[0]);\r\n\r\n      this.setPositionCenterAndSize(...this.getCenter(), width, newHeight);\r\n    }\r\n  }\r\n\r\n  scaleSize(scalar = 1) {\r\n    this.setPositionCenterAndSize(\r\n      ...this.getCenter(),\r\n      this.getWidth() * scalar,\r\n      this.getHeight() * scalar\r\n    );\r\n  }\r\n\r\n  setPositionCenter(centerX, centerY) {\r\n    this.setPositionCenterAndSize(\r\n      centerX,\r\n      centerY,\r\n      this.endX - this.startX,\r\n      this.endY - this.startY\r\n    );\r\n  }\r\n\r\n  setPositionCenterAndSize(centerX, centerY, width, height) {\r\n    var cameraMax = [width, height];\r\n\r\n    this.startX = centerX - cameraMax[0] / 2;\r\n    this.startY = centerY - cameraMax[1] / 2;\r\n    this.endX = centerX + cameraMax[0] / 2;\r\n    this.endY = centerY + cameraMax[1] / 2;\r\n\r\n    this.calculateMultiplier();\r\n  }\r\n\r\n  setSize(width, height) {\r\n    var center = this.getCenter();\r\n\r\n    this.setPositionCenterAndSize(center[0], center[1], width, height);\r\n  }\r\n\r\n  getCenter() {\r\n    return [\r\n      this.startX + this.getWidth() / 2,\r\n      this.startY + this.getHeight() / 2,\r\n    ];\r\n  }\r\n\r\n  getWidth() {\r\n    return this.endX - this.startX;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.endY - this.startY;\r\n  }\r\n\r\n  calculateMultiplier() {\r\n    var viewport = this.game.getViewport();\r\n    this.mut = [viewport[0] / this.getWidth(), viewport[1] / this.getHeight()];\r\n  }\r\n\r\n  transformX(x) {\r\n    return x * this.mut[0];\r\n  }\r\n\r\n  transformY(y) {\r\n    return y * this.mut[1];\r\n  }\r\n\r\n  transformCoordinates(x, y) {\r\n    var transform = [x - this.startX, y - this.startY];\r\n    transform[0] *= this.mut[0];\r\n    transform[1] *= this.mut[1];\r\n    return transform;\r\n  }\r\n\r\n  transformRect(x, y, w, h) {\r\n    return [\r\n      ...this.transformCoordinates(x, y),\r\n      this.transformX(w),\r\n      this.transformY(h),\r\n    ];\r\n  }\r\n}\r\n","export function getDistance(x1, y1, x2, y2) {\r\n  let y = x2 - x1;\r\n  let x = y2 - y1;\r\n\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\nexport function degreesToRadians(degrees) {\r\n  var pi = Math.PI;\r\n  return degrees * (pi / 180);\r\n}\r\n\r\nexport function radiansToDegree(radians) {\r\n  return radians * (180 / Math.PI);\r\n}\r\n","import Game from \"./Game\";\r\n\r\nexport default class Controller {\r\n  constructor(game) {\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n\r\n    this.controlling = this.game.player;\r\n  }\r\n\r\n  update(delta) {\r\n    var speed = (this.controlling.onGround ? 6 : 5.5) * delta;\r\n\r\n    if (this.game.inputManager.isKeyDown(\"shift\")) {\r\n      speed /= 5;\r\n    }\r\n\r\n    if (this.controlling.crouch) {\r\n      speed /= 5;\r\n    }\r\n\r\n    var left =\r\n      this.game.inputManager.isKeyDown(\"a\") ||\r\n      this.game.inputManager.isKeyDown(\"ArrowLeft\");\r\n\r\n    var right =\r\n      this.game.inputManager.isKeyDown(\"d\") ||\r\n      this.game.inputManager.isKeyDown(\"ArrowRight\");\r\n\r\n    var move = left ^ right && !this.controlling.animation.disableController;\r\n\r\n    if (move) {\r\n      if (left) {\r\n        this.controlling.x -= speed;\r\n        this.controlling.facing = 0;\r\n      }\r\n\r\n      if (right) {\r\n        this.controlling.x += speed;\r\n        this.controlling.facing = 1;\r\n      }\r\n\r\n      if (!this.controlling.running) {\r\n        this.controlling.running = true;\r\n      }\r\n    } else {\r\n      if (this.controlling.running) {\r\n        this.controlling.running = false;\r\n      }\r\n    }\r\n\r\n    var crouchValue = false;\r\n\r\n    if (\r\n      this.game.inputManager.isKeyDown(\"s\") ||\r\n      this.game.inputManager.isKeyDown(\"ArrowDown\")\r\n    ) {\r\n      if (this.controlling.ledgeHang) {\r\n        this.controlling.y += delta;\r\n      } else {\r\n        if (this.controlling.onGround) {\r\n          if (move) {\r\n            if (this.controlling.crouch) {\r\n              crouchValue = true;\r\n            } else {\r\n              this.controlling.slide();\r\n            }\r\n          } else {\r\n            crouchValue =\r\n              this.controlling.animationName === \"crouch\" ||\r\n              this.controlling.animationName === \"crawl\" ||\r\n              this.controlling.animation.idle;\r\n          }\r\n        } else {\r\n        }\r\n      }\r\n    }\r\n\r\n    this.controlling.setCrouch(crouchValue);\r\n\r\n    if (\r\n      this.game.inputManager.isKeyPressed(\"w\") ||\r\n      this.game.inputManager.isKeyPressed(\" \") ||\r\n      this.game.inputManager.isKeyPressed(\"ArrowUp\")\r\n    ) {\r\n      if (!this.controlling.animation.disableController) {\r\n        this.controlling.jump();\r\n      }\r\n    }\r\n\r\n    if (!this.controlling.animation.disableController) {\r\n      if (this.game.inputManager.isMousePressed(\"0\")) {\r\n        if (this.controlling.onGround) {\r\n          this.controlling.attack();\r\n        } else {\r\n          this.controlling.groundSlam();\r\n        }\r\n      }\r\n\r\n      if (this.game.inputManager.isKeyPressed(\"f\")) {\r\n        this.controlling.knockback();\r\n      }\r\n\r\n      if (this.game.inputManager.isKeyPressed(\"g\")) {\r\n        this.game.showInfo = !this.game.showInfo;\r\n      }\r\n    }\r\n\r\n    if (this.game.inputManager.isKeyPressed(\"-\")) {\r\n      this.game.camera.scaleSize(1.1);\r\n    }\r\n    if (this.game.inputManager.isKeyPressed(\"=\")) {\r\n      this.game.camera.scaleSize(0.9);\r\n    }\r\n\r\n    if (this.controlling.x > this.game.levelWidth / 5) {\r\n      var map = this.game.map;\r\n      var rows = [];\r\n\r\n      for (var i = 0; i < map.length; i++) {\r\n        var [x, y] = this.game.convertIndexToCoordinates(i);\r\n        var row = rows[y] || (rows[y] = []);\r\n\r\n        row.push(map[i]);\r\n      }\r\n\r\n      var newMap = [];\r\n\r\n      for (var i = 0; i < rows.length; i++) {\r\n        newMap.push(...rows[i], ...rows[i]);\r\n      }\r\n\r\n      this.game.map = newMap;\r\n      this.game.levelWidth *= 2;\r\n\r\n      this.game.collisionMap = this.game.createCollisionMap();\r\n    }\r\n  }\r\n}\r\n","import Game from \"./Game\";\r\n\r\nexport default class GameObject {\r\n  constructor(game) {\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.w = 0;\r\n    this.h = 0;\r\n\r\n    this.velocityX = 0;\r\n    this.velocityY = 0;\r\n\r\n    this.colliding = false;\r\n    this.delete = false;\r\n  }\r\n\r\n  setVelocity(velocityX, velocityY) {\r\n    this.velocityX = velocityX;\r\n    this.velocityY = velocityY;\r\n  }\r\n\r\n  setLeft(left) {\r\n    this.x = left;\r\n  }\r\n\r\n  getLeft() {\r\n    return this.x;\r\n  }\r\n\r\n  setRight(right) {\r\n    this.x = right - this.w;\r\n  }\r\n\r\n  getRight() {\r\n    return this.x + this.w;\r\n  }\r\n\r\n  setTop(top) {\r\n    this.y = top;\r\n  }\r\n\r\n  getTop() {\r\n    return this.y;\r\n  }\r\n\r\n  setBottom(bottom) {\r\n    this.y = bottom - this.h;\r\n  }\r\n\r\n  getBottom() {\r\n    return this.y + this.h;\r\n  }\r\n\r\n  getCenter() {\r\n    return [this.x + this.w / 2, this.y + this.h / 2];\r\n  }\r\n\r\n  update(delta) {\r\n    // compute velocity\r\n    if (this.velocityX) {\r\n      var isNegative = this.velocityX < 0;\r\n      var abs = Math.abs(this.velocityX);\r\n\r\n      var amount = Math.max(abs * 4 * delta, delta / 2);\r\n      if (amount > abs) {\r\n        amount = abs;\r\n      }\r\n\r\n      abs -= amount;\r\n      if (abs < 0) {\r\n        abs = 0;\r\n      }\r\n\r\n      this.velocityX = isNegative ? -abs : abs;\r\n      var force = isNegative ? -amount : amount;\r\n\r\n      this.x += force;\r\n    }\r\n\r\n    if (this.velocityY) {\r\n      var isNegative = this.velocityY < 0;\r\n      var abs = Math.abs(this.velocityY);\r\n\r\n      var amount = Math.max(abs * 4 * delta, delta / 2);\r\n      if (amount > abs) {\r\n        amount = abs;\r\n      }\r\n\r\n      abs -= amount;\r\n      if (abs < 0) {\r\n        abs = 0;\r\n      }\r\n\r\n      this.velocityY = isNegative ? -abs : abs;\r\n      var force = isNegative ? -amount : amount;\r\n\r\n      this.y += force;\r\n    }\r\n\r\n    this.tiles = {};\r\n\r\n    this.onGround = false;\r\n    this.colliding = false;\r\n\r\n    var colliding = new Set();\r\n\r\n    for (\r\n      var x = Math.floor(this.x) - 1;\r\n      x <= Math.floor(this.x + this.w) + 1;\r\n      x += 0.4\r\n    ) {\r\n      for (\r\n        var y = Math.floor(this.y) - 1;\r\n        y <= Math.floor(this.y + this.h) + 1;\r\n        y += 0.4\r\n      ) {\r\n        var _x = Math.floor(x);\r\n        var _y = Math.floor(y);\r\n\r\n        var _index = this.game.convertCoordinatesToIndex(_x, _y);\r\n\r\n        if (this.game.collisionMap[_index]) {\r\n          colliding.add(_index);\r\n        }\r\n      }\r\n    }\r\n\r\n    var setX = null;\r\n    var setGroundY = 0;\r\n    var groundY = 0;\r\n    var horizontalCollide = null;\r\n    var horizontalFlag = false;\r\n\r\n    for (var position of Array.from(colliding)) {\r\n      var index = position;\r\n      var [x, y] = this.game.convertIndexToCoordinates(index);\r\n\r\n      var block = {\r\n        x,\r\n        y,\r\n        w: 1,\r\n        h: 1,\r\n      };\r\n\r\n      if (this.collidesWith(block)) {\r\n        var side = this.calculateOverlap(block);\r\n        if (side === \"top\") {\r\n          if (\r\n            !this.crouch &&\r\n            this.calculateOverlap(block, {\r\n              x: this.x,\r\n              y: this.getBottom() - 0.1,\r\n              w: this.w,\r\n              h: 0.1,\r\n            }) !== \"top\"\r\n          ) {\r\n            side = this.x < block.x ? \"left\" : \"right\";\r\n          }\r\n        }\r\n        var flag = {\r\n          left: 1,\r\n          right: 2,\r\n          top: 4,\r\n          bottom: 8,\r\n        }[side];\r\n\r\n        if (this.game.collisionMap[index] & flag) {\r\n          this.colliding = true;\r\n\r\n          if (side === \"top\") {\r\n            this.onGround = true;\r\n            groundY = y;\r\n            if (this.getBottom() > y) {\r\n              this.setBottom(y + 0.01);\r\n            }\r\n          } else if (side === \"bottom\") {\r\n            if (this.getTop() < y + 1) {\r\n              this.setTop(y + 1);\r\n            }\r\n          } else if (side === \"left\") {\r\n            setX = x - this.w;\r\n            setGroundY = y;\r\n            horizontalCollide = block;\r\n            horizontalFlag = this.facing === 1;\r\n          } else if (side === \"right\") {\r\n            setX = x + block.w;\r\n            setGroundY = y;\r\n            horizontalCollide = block;\r\n            horizontalFlag = this.facing === 0;\r\n          }\r\n\r\n          this.tiles[index] = flag;\r\n        }\r\n\r\n        // console.log(this, block);\r\n      }\r\n    }\r\n\r\n    if (typeof setX === \"number\" && groundY !== setGroundY) {\r\n      this.x = setX;\r\n\r\n      if (\r\n        !this.onGround &&\r\n        this.animationName !== \"crawl\" &&\r\n        this.animationName !== \"roll\" &&\r\n        horizontalFlag &&\r\n        this.game.collisionMap[\r\n          this.game.convertCoordinatesToIndex(\r\n            horizontalCollide.x,\r\n            horizontalCollide.y - 1\r\n          )\r\n        ] &&\r\n        (this.y - Math.floor(this.y) < 0.3 ||\r\n          this.game.collisionMap[\r\n            this.game.convertCoordinatesToIndex(\r\n              horizontalCollide.x,\r\n              horizontalCollide.y + 1\r\n            )\r\n          ])\r\n      ) {\r\n        this.ledgeHang = true;\r\n\r\n        if (\r\n          this.animationName !== \"ledge_hang\" &&\r\n          this.animationName !== \"wall_jump\"\r\n        ) {\r\n          this.setAnimation(\"ledge_hang\");\r\n        }\r\n      }\r\n    } else {\r\n      if (this.ledgeHang) {\r\n        this.ledgeHang = false;\r\n        this.setAnimation(\"fall\");\r\n      }\r\n    }\r\n  }\r\n\r\n  collidesWith(other, overrideThis) {\r\n    var rect1 = overrideThis || this;\r\n    var rect2 = other;\r\n\r\n    return (\r\n      rect1.x < rect2.x + rect2.w &&\r\n      rect1.x + rect1.w > rect2.x &&\r\n      rect1.y < rect2.y + rect2.h &&\r\n      rect1.h + rect1.y > rect2.y\r\n    );\r\n  }\r\n\r\n  calculateOverlap(other, overrideThis) {\r\n    var r1 = overrideThis || this;\r\n    var r2 = other;\r\n\r\n    var dx = r1.x + r1.w / 2 - (r2.x + r2.w / 2);\r\n    var dy = r1.y + r1.h / 2 - (r2.y + r2.h / 2);\r\n    var width = (r1.w + r2.w) / 2;\r\n    var height = (r1.h + r2.h) / 2;\r\n    var crossWidth = width * dy;\r\n    var crossHeight = height * dx;\r\n    var collision = \"none\";\r\n    //\r\n    if (Math.abs(dx) <= width && Math.abs(dy) <= height) {\r\n      if (crossWidth > crossHeight) {\r\n        collision = crossWidth > -crossHeight ? \"bottom\" : \"left\";\r\n      } else {\r\n        collision = crossWidth > -crossHeight ? \"right\" : \"top\";\r\n      }\r\n    }\r\n    return collision;\r\n  }\r\n}\r\n","import GameObject from \"./GameObject\";\r\n\r\nexport default class Entity extends GameObject {\r\n  constructor(game) {\r\n    super(game);\r\n\r\n    this.w = 0.1;\r\n    this.h = 0.1;\r\n\r\n    this.direction = -1;\r\n  }\r\n\r\n  render() {\r\n    this.game.render.drawRect(this.x, this.y, this.w, this.h, \"#ff2222\");\r\n  }\r\n\r\n  update(delta) {\r\n    this.x += delta * this.direction * 3;\r\n\r\n    super.update();\r\n\r\n    if (this.collidesWith(this.game.player)) {\r\n      if (this.game.player.animationName === \"attack1\") {\r\n        this.direction = this.game.player.facing === 0 ? -1 : 1;\r\n\r\n        this.game.particleSystem.spawnParticles(this.x, this.y, 6, 0.5);\r\n\r\n        this.game.camera.shake();\r\n      } else if (this.game.player.animationName === \"ground_slam\") {\r\n        this.colliding = true;\r\n        this.game.camera.shake();\r\n      } else {\r\n        this.game.player.facing = this.direction < 0 ? 1 : 0;\r\n\r\n        this.game.player.knockback();\r\n        this.colliding = true;\r\n      }\r\n    }\r\n\r\n    if (this.colliding) {\r\n      this.delete = true;\r\n\r\n      this.game.particleSystem.spawnParticles(this.x, this.y, 5, 0.3);\r\n    }\r\n  }\r\n}\r\n","export default class InputManager {\r\n  constructor() {\r\n    this.keyboard = Object.create(null);\r\n    this.keypress = Object.create(null);\r\n    this.mouse = Object.create(null);\r\n    this.mousePress = Object.create(null);\r\n\r\n    this.mousePos = [];\r\n    this.mouseMoved = true;\r\n    this.events = [];\r\n  }\r\n\r\n  addEventListener(eventName, cb) {\r\n    window.addEventListener(eventName, cb);\r\n    this.events.push([eventName, cb]);\r\n  }\r\n\r\n  start() {\r\n    this.addEventListener(\"keydown\", (e) => {\r\n      this.handleKeyEvent(e.key, true);\r\n    });\r\n\r\n    this.addEventListener(\"keyup\", (e) => {\r\n      this.handleKeyEvent(e.key, false);\r\n    });\r\n\r\n    this.addEventListener(\"mousedown\", (e) => {\r\n      this.handleMouseEvent(e.button, true);\r\n    });\r\n\r\n    this.addEventListener(\"mouseup\", (e) => {\r\n      this.handleMouseEvent(e.button, false);\r\n    });\r\n\r\n    this.addEventListener(\"mousemove\", (e) => {\r\n      this.mousePos = [e.pageX, e.pageY];\r\n      this.mouseMoved = true;\r\n    });\r\n  }\r\n\r\n  end() {\r\n    this.events.forEach((event) => {\r\n      window.removeEventListener(event[0], event[1]);\r\n    });\r\n\r\n    this.events = [];\r\n  }\r\n\r\n  getMousePosition() {\r\n    return this.mousePos;\r\n  }\r\n\r\n  mouseToButton(str) {\r\n    if (str === \"left\") {\r\n      return 0;\r\n    }\r\n    if (str === \"right\") {\r\n      return 2;\r\n    }\r\n\r\n    return parseInt(str);\r\n  }\r\n\r\n  isMouseMove() {\r\n    if (this.mouseMoved) {\r\n      this.mouseMoved = false;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isKeyDown(char) {\r\n    var keyCode = char.toString().toLowerCase();\r\n\r\n    return !!this.keyboard[keyCode];\r\n  }\r\n\r\n  isKeyPressed(char) {\r\n    var keyCode = char.toString().toLowerCase();\r\n\r\n    var output = this.keypress[keyCode];\r\n    if (output) {\r\n      this.keypress[keyCode] = false;\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  isMouseDown(str) {\r\n    return this.mouse[this.mouseToButton(str)];\r\n  }\r\n\r\n  isMousePressed(str) {\r\n    var button = this.mouseToButton(str);\r\n\r\n    var output = this.mousePress[button];\r\n    if (output) {\r\n      this.mousePress[button] = false;\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  handleKeyEvent(char, state) {\r\n    var keyCode = char.toString().toLowerCase();\r\n\r\n    if (state && this.keyboard[keyCode]) {\r\n      return;\r\n    }\r\n    this.keyboard[keyCode] = state;\r\n    this.keypress[keyCode] = state;\r\n  }\r\n\r\n  handleMouseEvent(button, state) {\r\n    this.mouse[button] = state;\r\n    this.mousePress[button] = state;\r\n  }\r\n}\r\n","import Game from \"./Game\";\r\nimport { getRandom, getRandomInteger } from \"./random\";\r\n\r\nexport default class ParticleSystem {\r\n  constructor(game) {\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n\r\n    /**\r\n     * @type {Array.<{ x: number, y: number, size: number, ticks: number, vx: number, vy: number, alpha: number }>}\r\n     */\r\n    this.particles = [];\r\n  }\r\n\r\n  spawnParticles(x, y, amount = 5, sizeScale = 1) {\r\n    var realAmount =\r\n      amount === 1 ? amount : getRandomInteger(amount * 0.9, amount * 1.1);\r\n\r\n    for (var i = 0; i < realAmount; i++) {\r\n      var angle = getRandom(0, Math.PI * 2);\r\n      var speed = getRandom(0.1, 6) / 100;\r\n\r\n      var dx = (Math.cos(angle) * getRandom(3, 5)) / 100;\r\n      var dy = (Math.sin(angle) * getRandom(3, 5)) / 100;\r\n\r\n      this.particles.push({\r\n        x: x + dx,\r\n        y: y + dy,\r\n        size: getRandom(3, 6 * sizeScale) / 100,\r\n        ticks: getRandom(0, 1),\r\n        vx: Math.cos(angle) * speed,\r\n        vy: Math.sin(angle) * speed,\r\n        alpha: getRandom(0, 0.1),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    for (var particle of this.particles) {\r\n      this.game.ctx.globalAlpha = Math.min(1, Math.max(0, particle.alpha));\r\n\r\n      this.game.render.drawRect(\r\n        particle.x,\r\n        particle.y,\r\n        Math.max(0, particle.size),\r\n        Math.max(0, particle.size),\r\n        \"#fff\"\r\n      );\r\n    }\r\n\r\n    this.game.ctx.globalAlpha = 1;\r\n  }\r\n\r\n  update(delta) {\r\n    var deleting = [];\r\n\r\n    for (var i = 0; i < this.particles.length; i++) {\r\n      var particle = this.particles[i];\r\n\r\n      particle.x += delta * particle.vx;\r\n      particle.y += delta * particle.vy;\r\n\r\n      particle.ticks += delta;\r\n\r\n      if (particle.ticks > 2) {\r\n        particle.size -= delta / 200;\r\n        particle.alpha -= delta / 2;\r\n\r\n        if (particle.size < 0.0001 || particle.alpha < 0.0001) {\r\n          deleting.unshift(i);\r\n        }\r\n      } else if (particle.alpha < 1) {\r\n        particle.alpha += delta * 3;\r\n      }\r\n    }\r\n\r\n    for (var i = 0; i < deleting.length; i++) {\r\n      this.particles.splice(deleting[i], 1);\r\n    }\r\n  }\r\n}\r\n","export default class Animation {\r\n  constructor({\r\n    sprite,\r\n    frames,\r\n    speed,\r\n    after,\r\n    xOffset,\r\n    yOffset,\r\n    disableController,\r\n    idle,\r\n    size,\r\n  }) {\r\n    this.sprite = sprite;\r\n    this.frames = frames;\r\n    this.speed = speed;\r\n\r\n    this.after = after;\r\n\r\n    this.disableController = !!disableController;\r\n\r\n    this.xOffset = xOffset || 0;\r\n    this.yOffset = yOffset || 0;\r\n\r\n    this.idle = !!idle;\r\n    this.size = size;\r\n  }\r\n}\r\n","import Animation from \"./Animation\";\r\nimport Game from \"./Game\";\r\nimport GameObject from \"./GameObject\";\r\nimport { getDistance } from \"./math\";\r\nimport { getRandomInteger } from \"./random\";\r\nimport { radiansToDegree } from \"./util/MathUtil\";\r\n\r\nexport default class Player extends GameObject {\r\n  constructor(game) {\r\n    super(game);\r\n    this.x = 5;\r\n    this.y = 5;\r\n\r\n    this.w = 0.55;\r\n    this.h = 0.95;\r\n    this.defaultSize = [this.w, this.h];\r\n\r\n    this.onGround = false;\r\n    this.running = false;\r\n    this.gravityTick = 0;\r\n\r\n    this.ledgeHang = false;\r\n\r\n    /**\r\n     * - `0` = Left\r\n     * - `1` = Right\r\n     */\r\n    this.facing = 0;\r\n\r\n    /**\r\n     * @type {Game}\r\n     */\r\n    this.game = game;\r\n\r\n    this.tiles = {};\r\n\r\n    this.lastLandY = 0;\r\n\r\n    this.animations = {\r\n      idle: new Animation({\r\n        sprite: \"player_idle\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6],\r\n        speed: 140,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      look_up: new Animation({\r\n        sprite: \"player_look_up\",\r\n        frames: [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0],\r\n        speed: 200,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      run: new Animation({\r\n        sprite: \"player_run\",\r\n        frames: [0, 1, 2, 3, 4, 5, 7],\r\n        speed: 120,\r\n      }),\r\n      jump: new Animation({\r\n        sprite: \"player_jump\",\r\n        frames: [0],\r\n        speed: 110,\r\n        after: \"fall\",\r\n      }),\r\n      fall: new Animation({\r\n        sprite: \"player_jump\",\r\n        frames: [1, 2],\r\n        speed: 250,\r\n        after: \"fall\",\r\n      }),\r\n      land: new Animation({\r\n        sprite: \"player_land\",\r\n        frames: [0, 1],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      slide: new Animation({\r\n        sprite: \"player_slide\",\r\n        frames: [0, 1, 2],\r\n        speed: 90,\r\n        after: \"slide_transition\",\r\n        disableController: true,\r\n        size: [1, 0.6],\r\n        yOffset: -0.4,\r\n        xOffset: [0.3, 0.2],\r\n      }),\r\n      slide_transition: new Animation({\r\n        sprite: \"player_slide\",\r\n        frames: [3],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      roll: new Animation({\r\n        sprite: \"player_front_flip\",\r\n        frames: [5, 6, 7, 8, 9, 10, 11, 12],\r\n        speed: 60,\r\n        after: \"fall\",\r\n        size: [0.55, 0.6],\r\n        yOffset: -0.15,\r\n      }),\r\n      attack1: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_01\",\r\n        frames: [0, 1, 2, 3, 4, 5],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      attack2: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_02\",\r\n        frames: [0, 1, 2, 3, 4],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      attack3: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_03\",\r\n        frames: [0, 1, 2, 3],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      attack4: new Animation({\r\n        sprite: \"player_combat_combo_01_attack_04\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7, 8],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      ground_slam: new Animation({\r\n        sprite: \"player_combat_ground_slam\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6],\r\n        speed: 100,\r\n        after: \"ground_slam_transition\",\r\n        disableController: true,\r\n      }),\r\n      ground_slam_transition: new Animation({\r\n        sprite: \"player_combat_ground_slam\",\r\n        frames: [7, 8, 9],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        idle: true,\r\n      }),\r\n      knockback: new Animation({\r\n        sprite: \"player_knockback\",\r\n        frames: [0, 1, 2, 4, 4, 4, 4, 4, 4, 4, 5],\r\n        speed: 100,\r\n        after: \"idle\",\r\n        disableController: true,\r\n      }),\r\n      ledge_climb: new Animation({\r\n        sprite: \"player_ledge_climb\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7],\r\n        speed: 100,\r\n        after: \"ledge_climb\",\r\n        xOffset: [0.3, -0.3],\r\n        yOffset: 0.9,\r\n      }),\r\n      ledge_hang: new Animation({\r\n        sprite: \"player_ledge_hang\",\r\n        frames: [0, 1, 2, 3, 4, 5],\r\n        speed: 100,\r\n        after: \"ledge_hang\",\r\n        xOffset: [-0.1, 0.11],\r\n      }),\r\n      wall_jump: new Animation({\r\n        sprite: \"player_wall_jump\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n        speed: 100,\r\n        after: \"fall\",\r\n      }),\r\n      crouch: new Animation({\r\n        sprite: \"player_crouch\",\r\n        frames: [0, 1, 2, 3, 4, 5],\r\n        speed: 100,\r\n        after: \"crouch\",\r\n        size: [0.55, 0.6],\r\n        yOffset: -0.4,\r\n      }),\r\n      crawl: new Animation({\r\n        sprite: \"player_crawl\",\r\n        frames: [0, 1, 2, 3, 4, 5, 6, 7],\r\n        speed: 120,\r\n        after: \"crawl\",\r\n        size: [0.55, 0.6],\r\n        yOffset: -0.4,\r\n      }),\r\n    };\r\n\r\n    /**\r\n     * @type {Animation}\r\n     */\r\n    this.animation = null;\r\n    this.animationName = \"\";\r\n\r\n    this.setAnimation(\"idle\");\r\n    this.crouch = false;\r\n  }\r\n\r\n  setCrouch(value) {\r\n    if (!this.crouch && value) {\r\n      this.setAnimation(\"crouch\");\r\n      this.crouch = true;\r\n    } else if (this.crouch && !value) {\r\n      this.crouch = false;\r\n\r\n      this.setAnimation(\"idle\");\r\n    }\r\n  }\r\n\r\n  setAnimation(animationName, fixSize = true) {\r\n    if (!this.animations[animationName]) {\r\n      throw new Error(\"Invalid animation: \" + animationName);\r\n    }\r\n\r\n    if (animationName !== \"crouch\" && animationName !== \"crawl\") {\r\n      this.setCrouch(false);\r\n    }\r\n    var oldAnimation = this.animation;\r\n\r\n    this.animation = this.animations[animationName];\r\n    this.animationName = animationName;\r\n    this.animationTick = 0;\r\n\r\n    if (this.animation.size) {\r\n      this.w = this.animation.size[0];\r\n      this.h = this.animation.size[1];\r\n\r\n      this.x += (this.defaultSize[0] - this.animation.size[0]) / 2;\r\n      this.y += this.defaultSize[1] - this.animation.size[1];\r\n    } else {\r\n      [this.w, this.h] = this.defaultSize;\r\n\r\n      if (fixSize) {\r\n        if (oldAnimation && oldAnimation.size) {\r\n          this.x -= (this.w - oldAnimation.size[0]) / 2;\r\n          this.y -= this.h - oldAnimation.size[1];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  attack() {\r\n    this.game.camera.shake(0.15, 0.8);\r\n\r\n    this.setAnimation(\"attack1\");\r\n  }\r\n\r\n  groundSlam() {\r\n    this.setAnimation(\"ground_slam\");\r\n  }\r\n\r\n  jump() {\r\n    this.gravityTick = 0;\r\n    this.velocityX = 0;\r\n\r\n    this.lastLandY = null;\r\n\r\n    this.game.particleSystem.spawnParticles(\r\n      this.getCenter()[0],\r\n      this.getBottom() - 0.1,\r\n      4,\r\n      0.3\r\n    );\r\n\r\n    if (!this.onGround) {\r\n      this.setAnimation(\"roll\");\r\n      this.ledgeHang = false;\r\n\r\n      this.velocityY = -4.85;\r\n    } else {\r\n      this.setAnimation(\"jump\");\r\n      this.velocityY = -5;\r\n    }\r\n  }\r\n\r\n  slide() {\r\n    this.velocityX = 3 * (this.facing == 0 ? -1 : 1);\r\n\r\n    this.setAnimation(\"slide\");\r\n  }\r\n\r\n  knockback() {\r\n    this.setAnimation(\"knockback\");\r\n    setTimeout(() => {\r\n      this.velocityX = 0.1 * (this.facing == 0 ? 1 : -1);\r\n    }, 100);\r\n  }\r\n\r\n  render(delta) {\r\n    // animator\r\n    this.animationTick += delta * 1000;\r\n\r\n    var index = Math.floor(this.animationTick / this.animation.speed);\r\n    var done = false;\r\n    if (index > this.animation.frames.length - 1) {\r\n      if (index > this.animation.frames.length) {\r\n        done = true;\r\n      }\r\n\r\n      index = this.animation.frames.length - 1;\r\n    }\r\n\r\n    var frame = this.animation.frames[index];\r\n\r\n    if (this.game.showInfo) {\r\n      this.game.render.drawRect(\r\n        this.x,\r\n        this.y,\r\n        this.w,\r\n        this.h,\r\n        this.onGround ? \"#444\" : \"#663333\"\r\n      );\r\n    }\r\n\r\n    var xOffset = 0;\r\n\r\n    var [w, h] = this.defaultSize;\r\n\r\n    this.game.render.drawSprite(\r\n      {\r\n        sprite: this.animation.sprite,\r\n        frame: frame,\r\n        effects: this.facing == 0 ? [\"flipHorizontally\"] : [],\r\n      },\r\n      this.x -\r\n        w * 1.55 +\r\n        (Array.isArray(this.animation.xOffset)\r\n          ? this.animation.xOffset[this.facing]\r\n          : this.animation.xOffset) +\r\n        xOffset,\r\n      this.y - h * 1.05 + this.animation.yOffset,\r\n      w * h * 4.3,\r\n      w * h * 4.3 * 0.875\r\n    );\r\n\r\n    if (done) {\r\n      if (this.animation.after) {\r\n        if (this.animationName === \"idle\" && Math.random() > 0.5) {\r\n          this.setAnimation(\"look_up\");\r\n        } else {\r\n          this.setAnimation(this.animation.after);\r\n        }\r\n      } else {\r\n        this.setAnimation(this.animationName);\r\n      }\r\n    }\r\n\r\n    // animation logic\r\n    if (this.running) {\r\n      if (this.animation.idle) {\r\n        this.setAnimation(\"run\");\r\n      }\r\n      if (this.animationName === \"crouch\") {\r\n        this.setAnimation(\"crawl\");\r\n      }\r\n    } else {\r\n      if (this.animationName === \"run\") {\r\n        this.setAnimation(\"idle\");\r\n      }\r\n      if (this.animationName === \"crawl\") {\r\n        this.setAnimation(\"crouch\");\r\n      }\r\n    }\r\n\r\n    if (!this.onGround) {\r\n      if (\r\n        this.animation.idle ||\r\n        (!this.ledgeHang && this.animationName === \"ledge_hang\")\r\n      ) {\r\n        this.setAnimation(\"fall\");\r\n      }\r\n    } else {\r\n      if (this.animationName === \"fall\") {\r\n        this.setAnimation(\"idle\");\r\n      }\r\n    }\r\n  }\r\n\r\n  update(delta) {\r\n    var wasOnGround = this.onGround;\r\n\r\n    super.update(delta);\r\n\r\n    if (!this.onGround && !this.ledgeHang) {\r\n      this.gravityTick += delta;\r\n      this.y += Math.min(this.gravityTick / 5, delta * 10);\r\n    } else {\r\n      this.gravityTick = 0;\r\n    }\r\n\r\n    if (this.onGround) {\r\n      if (!wasOnGround) {\r\n        var y = Math.floor(this.y);\r\n        if (y !== this.lastLandY) {\r\n          this.lastLandY = y;\r\n\r\n          this.game.particleSystem.spawnParticles(\r\n            this.getCenter()[0],\r\n            this.getBottom() - 0.1,\r\n            5,\r\n            0.3\r\n          );\r\n\r\n          if (this.velocityY < 0) {\r\n            this.velocityY = 0;\r\n          } else {\r\n          }\r\n          if (\r\n            this.animationName !== \"ground_slam\" &&\r\n            this.animationName !== \"knockback\"\r\n          ) {\r\n            this.setAnimation(\"land\", true);\r\n          } else {\r\n            this.game.camera.shake(0.1, 4);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // game boundaries\r\n    this.x = Math.max(0, Math.min(this.game.levelWidth - this.w, this.x));\r\n    this.y = Math.max(0, Math.min(this.game.levelHeight - this.h, this.y));\r\n  }\r\n}\r\n","import Game from \"./Game.js\";\r\nimport { degreesToRadians } from \"./util/MathUtil.js\";\r\n\r\nexport default class Render {\r\n  /**\r\n   * @param {Game} game\r\n   */\r\n  constructor(game) {\r\n    this.game = game;\r\n  }\r\n\r\n  setAlpha(alpha) {\r\n    this.game.ctx.globalAlpha = alpha;\r\n  }\r\n\r\n  drawLine(startX, startY, endX, endY, strokeWidth, color) {\r\n    this.game.ctx.strokeStyle = color;\r\n\r\n    this.game.ctx.beginPath();\r\n    this.game.ctx.moveTo(\r\n      ...this.game.camera.transformCoordinates(startX, startY)\r\n    );\r\n    this.game.ctx.lineTo(...this.game.camera.transformCoordinates(endX, endY));\r\n    this.game.ctx.lineWidth = this.game.camera.transformX(strokeWidth);\r\n\r\n    this.game.ctx.stroke();\r\n    this.game.ctx.closePath();\r\n  }\r\n\r\n  drawRect(x, y, w, h, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.fillRect(...this.game.camera.transformRect(x, y, w, h));\r\n  }\r\n\r\n  drawCircle(x, y, r, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.beginPath();\r\n    this.game.ctx.arc(\r\n      ...this.game.camera.transformCoordinates(x, y),\r\n      this.game.camera.transformX(r),\r\n      2 * Math.PI,\r\n      0\r\n    );\r\n    this.game.ctx.fill();\r\n    this.game.ctx.closePath();\r\n  }\r\n\r\n  /**\r\n   * @param {Object} spriteInfo\r\n   * @param {string} spriteInfo.sprite\r\n   * @param {number} spriteInfo.frame\r\n   * @param {string[]} spriteInfo.effects\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} w\r\n   * @param {number} h\r\n   */\r\n  drawSprite(spriteInfo, x, y, w, h) {\r\n    var sprite = this.game.ssm.getSpriteFromInfoObject(spriteInfo);\r\n\r\n    if (sprite) {\r\n      this.drawScalingSprite(spriteInfo, x, y, w, h);\r\n\r\n      var aspectRatio = sprite.h / sprite.w;\r\n      var passedAspectRatio = h / w;\r\n\r\n      if (aspectRatio.toFixed(2) !== passedAspectRatio.toFixed(2)) {\r\n        throw new Error(\r\n          \"Invalid aspect ratio while drawing \" +\r\n            JSON.stringify(spriteInfo) +\r\n            \", expected: \" +\r\n            aspectRatio +\r\n            \", received: \" +\r\n            passedAspectRatio\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  drawScalingSprite(spriteInfo, x, y, w, h) {\r\n    var sprite = this.game.ssm.getSpriteFromInfoObject(spriteInfo);\r\n\r\n    if (sprite) {\r\n      this.drawImage(\r\n        sprite.spriteSheet.image,\r\n        x,\r\n        y,\r\n        w,\r\n        h,\r\n        sprite.x,\r\n        sprite.y,\r\n        sprite.w,\r\n        sprite.h\r\n      );\r\n    }\r\n  }\r\n\r\n  drawImage(img, x, y, w, h, sx, sy, sw, sh) {\r\n    this.game.ctx.drawImage(\r\n      img,\r\n      sx,\r\n      sy,\r\n      sw,\r\n      sh,\r\n      ...this.game.camera.transformRect(x, y, w, h).map(Math.round)\r\n    );\r\n  }\r\n\r\n  drawImageWithRotation(image, _x, _y, _w, _h, sx, sy, sw, sh, rotateDegrees) {\r\n    var [x, y, width, height] = this.game.camera.transformRect(_x, _y, _w, _h);\r\n\r\n    x += width / 2;\r\n    y += height / 2;\r\n\r\n    var context = this.game.ctx;\r\n\r\n    var angleInRadians = degreesToRadians(rotateDegrees);\r\n\r\n    context.translate(x, y);\r\n    context.rotate(angleInRadians);\r\n    context.drawImage(\r\n      image,\r\n      sx,\r\n      sy,\r\n      sw,\r\n      sh,\r\n      -width / 2,\r\n      -height / 2,\r\n      width,\r\n      height\r\n    );\r\n    context.rotate(-angleInRadians);\r\n    context.translate(-x, -y);\r\n  }\r\n\r\n  drawText(text, x, y, fontSize, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.font = fontSize + \"px\";\r\n\r\n    this.game.ctx.fillText(\r\n      text,\r\n      ...this.game.camera.transformCoordinates(x, y)\r\n    );\r\n  }\r\n\r\n  drawScalingText(text, x, y, maxX, fontSize, color) {\r\n    this.game.ctx.fillStyle = color;\r\n    this.game.ctx.font = fontSize + \"px\";\r\n\r\n    this.game.ctx.fillText(\r\n      text,\r\n      ...this.game.camera.transformCoordinates(x, y),\r\n      this.game.camera.transformX(maxX)\r\n    );\r\n  }\r\n}\r\n","import Sprite from \"./Sprite\";\r\nimport SpriteSheet from \"./SpriteSheet\";\r\n\r\nexport default class ImageEffects {\r\n  constructor() {\r\n    this.canvas = document.createElement(\"canvas\");\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  async applyEffectsToSpriteSheet(spriteSheet, effects) {\r\n    if (!effects.length) {\r\n      return spriteSheet;\r\n    }\r\n\r\n    var images = new Map();\r\n    var firstImage;\r\n    var clonedSprites = {};\r\n\r\n    for (var spriteName in spriteSheet.sprites) {\r\n      var sprite = spriteSheet.sprites[spriteName];\r\n      var image = sprite.spriteSheet.image;\r\n\r\n      var clonedSprite = new Sprite(sprite, sprite.spriteSheet);\r\n      clonedSprites[spriteName] = clonedSprite;\r\n\r\n      if (!firstImage) {\r\n        firstImage = image;\r\n      }\r\n\r\n      if (!images.has(image)) {\r\n        images.set(image, [clonedSprite]);\r\n      } else {\r\n        images.get(image).push(clonedSprite);\r\n      }\r\n    }\r\n\r\n    var topLevel = new SpriteSheet(\r\n      await this.applyEffectsToImage(firstImage, effects),\r\n      {\r\n        type: \"manual\",\r\n        sprites: {},\r\n      },\r\n      spriteSheet.ssm,\r\n      false\r\n    );\r\n\r\n    topLevel.sprites = clonedSprites;\r\n\r\n    for (var image of images.keys()) {\r\n      var sprites = images.get(image);\r\n\r\n      var newImage = await this.applyEffectsToImage(image, effects);\r\n      var newSpriteSheet = new SpriteSheet(\r\n        newImage,\r\n        {\r\n          type: \"manual\",\r\n          sprites: {},\r\n        },\r\n        spriteSheet.ssm,\r\n        false\r\n      );\r\n\r\n      newSpriteSheet.sprites = sprites;\r\n\r\n      for (var sprite of sprites) {\r\n        sprite.spriteSheet = newSpriteSheet;\r\n      }\r\n    }\r\n\r\n    return topLevel;\r\n  }\r\n\r\n  async applyEffectsToImage(image, effects) {\r\n    if (!effects.length) {\r\n      return image;\r\n    }\r\n\r\n    var currentImage = image;\r\n    for (var effect of effects) {\r\n      currentImage = await this.applyEffectToImage(currentImage, effect);\r\n    }\r\n\r\n    return currentImage;\r\n  }\r\n\r\n  async applyEffectToImage(image, effect) {\r\n    return new Promise((resolve, reject) => {\r\n      var effectName = typeof effect === \"string\" ? effect : effect.name;\r\n\r\n      // prepare canvas\r\n      this.canvas.width = image.width;\r\n      this.canvas.height = image.height;\r\n\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n      switch (effectName) {\r\n        case \"flipHorizontally\":\r\n          this.flipHorizontally(image);\r\n          break;\r\n\r\n        case \"teamColor\":\r\n          this.teamColor(image, effect.payload);\r\n          break;\r\n\r\n        default:\r\n          throw new Error(\"Invalid effect name \" + effectName);\r\n      }\r\n\r\n      let outputImage = new Image();\r\n\r\n      var dataURL = this.canvas.toDataURL(\"image/png\");\r\n\r\n      outputImage.src = dataURL;\r\n      outputImage.onload = () => {\r\n        outputImage.loaded = true;\r\n\r\n        resolve(outputImage);\r\n      };\r\n    });\r\n  }\r\n\r\n  teamColor(image, color = \"#ff2222\") {\r\n    var ctx = this.ctx,\r\n      canvas = this.canvas;\r\n\r\n    if (Array.isArray(color)) {\r\n      color = \"rgb(\" + color.join(\",\") + \")\";\r\n    }\r\n    /// ... var color = colors[index];\r\n\r\n    this.canvas.width = image.width;\r\n    this.canvas.height = image.height;\r\n\r\n    // First draw your image to the buffer\r\n    ctx.drawImage(image, 0, 0);\r\n\r\n    // Now we'll multiply a rectangle of your chosen color\r\n\r\n    ctx.globalCompositeOperation = \"darken\";\r\n\r\n    ctx.fillStyle = color;\r\n\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Finally, fix masking issues you'll probably incur and optional globalAlpha\r\n    ctx.globalAlpha = 1;\r\n    ctx.globalCompositeOperation = \"destination-in\";\r\n    ctx.drawImage(image, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * @param {Image} image\r\n   */\r\n  flipHorizontally(image) {\r\n    this.canvas.width = image.width;\r\n    this.canvas.height = image.height;\r\n\r\n    const flipHorizontally = (img, x, y) => {\r\n      // move to x + img's width\r\n      this.ctx.translate(x + img.width, y);\r\n\r\n      // scaleX by -1; this \"trick\" flips horizontally\r\n      this.ctx.scale(-1, 1);\r\n\r\n      // draw the img\r\n      // no need for x,y since we've already translated\r\n      this.ctx.drawImage(img, 0, 0);\r\n\r\n      // always clean up -- reset transformations to default\r\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    flipHorizontally(image, 0, 0);\r\n  }\r\n}\r\n","import ImageEffects from \"./ImageEffects\";\r\nimport Sprite from \"./Sprite\";\r\nimport SpriteSheetManager from \"./SpriteSheetManager\";\r\n\r\nexport default class SpriteSheet {\r\n  constructor(imgPath, info, spriteSheetManager, isTopLevel = true) {\r\n    if (\r\n      !spriteSheetManager ||\r\n      !(spriteSheetManager instanceof SpriteSheetManager)\r\n    ) {\r\n      throw new Error(\"Invalid spriteSheetManager\");\r\n    }\r\n\r\n    /**\r\n     * @type {Object.<string, Sprite>}\r\n     */\r\n    this.sprites = {};\r\n    this.ssm = spriteSheetManager;\r\n    this.effectsCache = {};\r\n    this.creating = {};\r\n\r\n    this.name = \"\";\r\n\r\n    this.image = imgPath instanceof Image ? imgPath : new Image();\r\n\r\n    if (typeof imgPath === \"string\") {\r\n      this.image.src = \"/sprites/\" + imgPath;\r\n    }\r\n\r\n    this.image.addEventListener(\"error\", (e) => {\r\n      console.log(\"Error loading \" + this.image.src, e);\r\n    });\r\n\r\n    this.image.addEventListener(\"load\", () => {\r\n      this.image.loaded = true;\r\n      if (isTopLevel) {\r\n        this.ssm.incrementLoaded();\r\n      }\r\n\r\n      if (info.type === \"auto\") {\r\n        if (!info.width || !info.height) {\r\n          throw new Error(\r\n            \"Invalid width/height on info \" + JSON.stringify(info)\r\n          );\r\n        }\r\n\r\n        var width = info.width;\r\n        var height = info.height;\r\n\r\n        var border = info.border || 0;\r\n\r\n        var imageWidth = this.image.width - border * 2;\r\n        var imageHeight = this.image.height - border * 2;\r\n\r\n        if (width > imageWidth) {\r\n          throw new Error(\r\n            imgPath +\r\n              \" invalid sprite width \" +\r\n              width +\r\n              \" when image is \" +\r\n              imageWidth +\r\n              \"px wide\"\r\n          );\r\n        }\r\n\r\n        if (height > imageHeight) {\r\n          throw new Error(\r\n            imgPath +\r\n              \" invalid sprite height \" +\r\n              width +\r\n              \" when image is \" +\r\n              imageHeight +\r\n              \"px tall\"\r\n          );\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var i = 0;\r\n        while (true) {\r\n          this.sprites[i] = new Sprite(\r\n            {\r\n              x: x,\r\n              y: y,\r\n              w: width,\r\n              h: height,\r\n            },\r\n            this\r\n          );\r\n\r\n          i++;\r\n          x += width;\r\n          if (x >= imageWidth) {\r\n            x = border;\r\n            y += height;\r\n          }\r\n\r\n          if (y >= imageHeight) {\r\n            break;\r\n          }\r\n        }\r\n      } else if (info.type === \"manual\") {\r\n        if (!info.sprites) {\r\n          throw new Error(\"Invalid sprites on info \" + JSON.stringify(info));\r\n        }\r\n\r\n        var sprites = info.sprites;\r\n        for (var spriteName in sprites) {\r\n          this.sprites[spriteName] = new Sprite(sprites[spriteName], this);\r\n        }\r\n      } else if (info.type === \"increment_file_name\") {\r\n        var prefix = imgPath.split(\"1.png\")[0];\r\n        var suffix = \".png\";\r\n\r\n        if (!imgPath.includes(\"1.png\")) {\r\n          throw new Error(\"Invalid path\");\r\n        }\r\n\r\n        this.sprites[0] = new Sprite(\r\n          {\r\n            x: 0,\r\n            y: 0,\r\n            w: this.image.width,\r\n            h: this.image.height,\r\n          },\r\n          this\r\n        );\r\n\r\n        for (var i = 2; i <= info.max; i++) {\r\n          ((i) => {\r\n            // Placeholder sprite while it loads\r\n\r\n            var newImageSRC = prefix + i + suffix;\r\n\r\n            var childSprite = new Sprite(\r\n              {\r\n                x: 0,\r\n                y: 0,\r\n                w: this.image.width,\r\n                h: this.image.height,\r\n              },\r\n              new SpriteSheet(\r\n                newImageSRC,\r\n                {\r\n                  type: \"single\",\r\n                },\r\n                this.ssm\r\n              )\r\n            );\r\n\r\n            childSprite.indirect = true;\r\n\r\n            this.sprites[i - 1] = childSprite;\r\n          })(i);\r\n        }\r\n      } else if (info.type === \"single\") {\r\n        this.sprites = {\r\n          0: new Sprite(\r\n            {\r\n              x: 0,\r\n              y: 0,\r\n              w: this.image.width,\r\n              h: this.image.height,\r\n            },\r\n            this\r\n          ),\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {string} spriteName\r\n   * @returns {Sprite}\r\n   */\r\n  getSprite(spriteName) {\r\n    var sprite = this.sprites[spriteName];\r\n    if (!sprite) {\r\n      throw new Error(\r\n        \"Invalid sprite: \" +\r\n          spriteName +\r\n          \" (\" +\r\n          this.name +\r\n          \") [\" +\r\n          Object.keys(this.sprites).join(\",\") +\r\n          \"]\"\r\n      );\r\n    }\r\n\r\n    return sprite;\r\n  }\r\n\r\n  getEffects(effects) {\r\n    if (!effects.length) {\r\n      return this;\r\n    }\r\n\r\n    var name = JSON.stringify(effects);\r\n\r\n    if (this.effectsCache[name]) {\r\n      return this.effectsCache[name];\r\n    }\r\n    if (this.creating[name]) {\r\n      return this;\r\n    }\r\n\r\n    this.creating[name] = true;\r\n\r\n    (async () => {\r\n      var imageEffects = new ImageEffects();\r\n      var newSpriteSheet = await imageEffects.applyEffectsToSpriteSheet(\r\n        this,\r\n        effects\r\n      );\r\n\r\n      if (!(newSpriteSheet instanceof SpriteSheet)) {\r\n        throw new Error(\"Expected SpriteSheet\");\r\n      }\r\n\r\n      this.effectsCache[name] = newSpriteSheet;\r\n      this.creating[name] = false;\r\n    })();\r\n\r\n    return this;\r\n  }\r\n}\r\n","import SpriteSheet from \"./SpriteSheet\";\r\n\r\nexport default class Sprite {\r\n  constructor(spriteInfo, spriteSheet) {\r\n    if (!(spriteSheet instanceof SpriteSheet)) {\r\n      throw new Error(\"Invalid sprite sheet\");\r\n    }\r\n\r\n    this.x = spriteInfo.x || 0;\r\n    this.y = spriteInfo.y || 0;\r\n    this.w = spriteInfo.w || 0;\r\n    this.h = spriteInfo.h || 0;\r\n\r\n    /**\r\n     * @type {SpriteSheet}\r\n     */\r\n    this.spriteSheet = spriteSheet;\r\n  }\r\n}\r\n","import Sprite from \"./Sprite.js\";\r\nimport SpriteSheet from \"./SpriteSheet.js\";\r\n\r\nexport default class SpriteSheetManager {\r\n  constructor() {\r\n    /**\r\n     * @type {Object.<string, SpriteSheet>}\r\n     */\r\n    this.spriteSheets = {};\r\n\r\n    this.assetsLoaded = 0;\r\n    this.assetsTotal = 0;\r\n    this.hasLoaded = false;\r\n    this.onLoaded = () => {};\r\n  }\r\n\r\n  incrementLoaded() {\r\n    this.assetsLoaded++;\r\n\r\n    console.log(this.assetsLoaded, this.assetsTotal);\r\n\r\n    setTimeout(() => {\r\n      if (this.assetsLoaded === this.assetsTotal) {\r\n        if (!this.hasLoaded) {\r\n          this.hasLoaded = true;\r\n          this.onLoaded();\r\n        }\r\n      }\r\n    }, 90);\r\n  }\r\n\r\n  addSpriteSheet(name, imgPath, info) {\r\n    var ss = new SpriteSheet(imgPath, info, this);\r\n    ss.name = name;\r\n\r\n    if (info.type === \"increment_file_name\") {\r\n      this.assetsTotal += info.max;\r\n    } else {\r\n      this.assetsTotal += 1;\r\n    }\r\n\r\n    this.spriteSheets[name] = ss;\r\n    return ss;\r\n  }\r\n\r\n  /**\r\n   * @param {string} spriteSheetName\r\n   * @returns {SpriteSheet}\r\n   */\r\n  getSpriteSheet(spriteSheetName) {\r\n    if (!this.spriteSheets[spriteSheetName]) {\r\n      throw new Error(\"Invalid sprite sheet: \" + spriteSheetName);\r\n    }\r\n    return this.spriteSheets[spriteSheetName];\r\n  }\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @returns {Sprite}\r\n   */\r\n  getSprite(path) {\r\n    var spriteSheetName = path.split(\":\")[0];\r\n    var spriteName = path.split(\":\")[1];\r\n\r\n    return this.getSpriteSheet(spriteSheetName).getSprite(spriteName);\r\n  }\r\n\r\n  /**\r\n   * @param {Object} spriteInfo\r\n   * @param {string} spriteInfo.sprite\r\n   * @param {number} spriteInfo.frame\r\n   * @param {string[]} spriteInfo.effects\r\n   * @returns {Sprite}\r\n   */\r\n  getSpriteFromInfoObject(spriteInfo) {\r\n    var sprite = spriteInfo.sprite;\r\n    var frame = spriteInfo.frame;\r\n\r\n    var effects = spriteInfo.effects || [];\r\n\r\n    var spriteSheet = this.getSpriteSheet(sprite).getEffects(effects);\r\n\r\n    if (spriteSheet) {\r\n      return spriteSheet.getSprite(frame);\r\n    } else {\r\n      throw new Error(\"No sprite sheet\");\r\n    }\r\n  }\r\n}\r\n","import Camera from \"./Camera\";\r\nimport Controller from \"./Controller\";\r\nimport Entity from \"./Entity\";\r\nimport InputManager from \"./InputManager\";\r\nimport ParticleSystem from \"./ParticleSystem\";\r\nimport Player from \"./Player\";\r\nimport Render from \"./Render\";\r\nimport SpriteSheetManager from \"./SpriteSheetManager\";\r\nimport { v4 } from \"uuid\";\r\nimport { getRandomInteger } from \"./random\";\r\n\r\nexport default class Game {\r\n  constructor(canvas, ctx, ssm) {\r\n    /**\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas = canvas;\r\n\r\n    /**\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.ctx = ctx;\r\n\r\n    /**\r\n     * @type {SpriteSheetManager}\r\n     */\r\n    this.ssm = ssm;\r\n\r\n    this.render = new Render(this);\r\n    this.camera = new Camera(this);\r\n\r\n    this.inputManager = new InputManager();\r\n    this.particleSystem = new ParticleSystem(this);\r\n\r\n    this.player = new Player(this);\r\n    this.controller = new Controller(this);\r\n\r\n    /**\r\n     * @type {Object.<string, Entity>}\r\n     */\r\n    this.entities = {};\r\n\r\n    const level = [\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 5, 0, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0],\r\n      [0, 5, 0, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0],\r\n      [0, 5, 0, 5, 0, 5, 5, 0, 0, 0, 0, 5, 0, 0, 0],\r\n      [0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 0],\r\n      [0, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0],\r\n      [0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 5, 5, 0],\r\n      [0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5],\r\n      [0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0],\r\n      [5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0],\r\n      [0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 0, 0, 5, 5, 0, 0, 0, 5, 5, 5, 5],\r\n      [5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5],\r\n      [5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5],\r\n      [5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5],\r\n      [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],\r\n    ];\r\n\r\n    this.showInfo = false;\r\n    this.map = level.flat(1);\r\n\r\n    this.levelWidth = level[0].length;\r\n    this.levelHeight = level.length;\r\n    this.camera.endY = this.levelHeight - 7;\r\n    this.camera.startY = this.levelHeight - 15;\r\n    this.camera.maxY = this.levelHeight;\r\n    this.camera.minX = 0;\r\n\r\n    this.player.y = this.levelHeight - 12;\r\n\r\n    this.spawnTick = 0;\r\n    this.fpsTick = 0;\r\n    this.fps = 0;\r\n\r\n    if (this.map.length !== this.levelWidth * this.levelHeight) {\r\n      throw new Error(\"Invalid map length: \" + this.map.length);\r\n    }\r\n\r\n    /**\r\n     * - `0` = No collision\r\n     * - `1` = Left\r\n     * - `2` = Right\r\n     * - `4` = Top\r\n     * - `8` = Bottom\r\n     */\r\n    this.collisionMap = this.createCollisionMap();\r\n  }\r\n\r\n  end() {\r\n    this.inputManager.end();\r\n  }\r\n\r\n  spawnEntity() {\r\n    var id = v4();\r\n\r\n    var entity = new Entity(this);\r\n    this.entities[id] = entity;\r\n\r\n    var direction = Math.random() > 0.5 ? -1 : 1;\r\n\r\n    if (this.camera.startX <= 0) {\r\n      direction = 1;\r\n    }\r\n\r\n    if (direction === -1) {\r\n      entity.x = this.camera.endX + 2;\r\n    } else {\r\n      entity.x = this.camera.startX - 2;\r\n    }\r\n\r\n    entity.direction = direction;\r\n\r\n    entity.y = this.player.y + getRandomInteger(-2, 2);\r\n  }\r\n\r\n  createCollisionMap() {\r\n    var collisionMap = [];\r\n\r\n    for (var i = 0; i < this.map.length; i++) {\r\n      var block = this.map[i];\r\n\r\n      var flag = 0;\r\n\r\n      if (block) {\r\n        var [x, y] = this.convertIndexToCoordinates(i);\r\n        var top = this.map[this.convertCoordinatesToIndex(x, y - 1)];\r\n        var bottom = this.map[this.convertCoordinatesToIndex(x, y + 1)];\r\n\r\n        var left = this.map[this.convertCoordinatesToIndex(x - 1, y)];\r\n        var right = this.map[this.convertCoordinatesToIndex(x + 1, y)];\r\n\r\n        if (x !== 0) {\r\n          flag |= !left ? 1 : 0;\r\n        }\r\n        if (x !== this.levelWidth - 1) {\r\n          flag |= !right ? 2 : 0;\r\n        }\r\n        if (y !== 0) {\r\n          flag |= !top ? 4 : 0;\r\n        }\r\n        if (y !== this.levelHeight - 1) {\r\n          flag |= !bottom ? 8 : 0;\r\n        }\r\n      }\r\n\r\n      collisionMap.push(flag);\r\n    }\r\n\r\n    return collisionMap;\r\n  }\r\n\r\n  getViewport() {\r\n    return [this.canvas.width, this.canvas.height];\r\n  }\r\n\r\n  start() {\r\n    this.inputManager.start();\r\n    this.particleSystem.particles = [];\r\n\r\n    this.camera.followingObject = this.player;\r\n  }\r\n\r\n  convertIndexToCoordinates(i) {\r\n    return [i % this.levelWidth, Math.floor(i / this.levelWidth)];\r\n  }\r\n\r\n  convertCoordinatesToIndex(x, y) {\r\n    return y * this.levelWidth + x;\r\n  }\r\n\r\n  renderGame(delta) {\r\n    // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // var spriteSheet = this.ssm.getSpriteSheet(\"tile\");\r\n\r\n    // var sprites = Object.keys(spriteSheet.sprites);\r\n\r\n    // var gap = 0.05;\r\n\r\n    // var x = this.camera.startX + gap,\r\n    //   y = this.camera.startY + gap;\r\n\r\n    // for (var spriteName of sprites) {\r\n    //   var sprite = spriteSheet.sprites[spriteName];\r\n\r\n    //   var w = sprite.w / 100;\r\n    //   var h = sprite.h / 100;\r\n\r\n    //   this.render.drawRect(x, y, w, h, \"#fff\");\r\n\r\n    //   this.render.drawSprite(\r\n    //     {\r\n    //       sprite: spriteSheet.name,\r\n    //       frame: spriteName,\r\n    //       effects: [],\r\n    //     },\r\n    //     x,\r\n    //     y,\r\n    //     w,\r\n    //     h\r\n    //   );\r\n\r\n    //   this.render.drawText(spriteName, x, y + 0.1, \"14\", \"#444499\");\r\n\r\n    //   x += h + gap;\r\n    //   if (x >= this.camera.getWidth() - gap) {\r\n    //     x = this.camera.startX + gap;\r\n    //     y += h + gap;\r\n    //   }\r\n    // }\r\n\r\n    // for (var i = 0; i < 3; i++) {\r\n    //   var pow = ((1 / (4 - i)) * 1) / (4 - i);\r\n    //   var h = this.levelHeight;\r\n    //   var x =\r\n    //     -this.levelHeight +\r\n    //     -this.camera.getCenter()[0] * pow +\r\n    //     this.camera.getCenter()[0];\r\n    //   var w = h / 0.5625;\r\n    //   while (x < this.camera.endX) {\r\n    //     this.render.drawSprite(\r\n    //       {\r\n    //         sprite: \"background\",\r\n    //         frame: i,\r\n    //       },\r\n    //       x,\r\n    //       this.camera.startY,\r\n    //       w,\r\n    //       h\r\n    //     );\r\n    //     x += w;\r\n    //   }\r\n    // }\r\n\r\n    // for (var i = 0; i < this.map.length; i++) {\r\n    //   var block = this.map[i];\r\n    //   if (block) {\r\n    //     var [x, y] = this.convertIndexToCoordinates(i);\r\n    //     // this.render.drawRect(x - 0.01, y - 0.01, 1.02, 1.02, \"#333\");\r\n    //     this.render.drawSprite(\r\n    //       {\r\n    //         sprite: \"tile\",\r\n    //         frame: block - 1,\r\n    //         effects: [],\r\n    //       },\r\n    //       x,\r\n    //       y,\r\n    //       1,\r\n    //       1\r\n    //     );\r\n    //   }\r\n    // }\r\n\r\n    this.ctx.fillStyle = \"#fff\";\r\n    this.ctx.font = \"20px Readex Pro\";\r\n    this.ctx.fillText(this.fps + \"\", 5, 20);\r\n    this.ctx.font = \"14px Readex Pro\";\r\n\r\n    this.player.render(delta);\r\n    for (var entityUUID in this.entities) {\r\n      var entity = this.entities[entityUUID];\r\n\r\n      entity.render(delta);\r\n    }\r\n\r\n    for (var i = 0; i < this.map.length; i++) {\r\n      var collisionFlag = this.collisionMap[i];\r\n      var [x, y] = this.convertIndexToCoordinates(i);\r\n\r\n      if (\r\n        x + 1 > this.camera.startX &&\r\n        y + 1 > this.camera.startY &&\r\n        x <= this.camera.endX &&\r\n        y <= this.camera.endY\r\n      ) {\r\n        var color = \"#fff\";\r\n\r\n        var width = 0.025;\r\n\r\n        if (collisionFlag & 1) {\r\n          this.render.drawRect(x, y, width, 1, color);\r\n          this.render.drawText(\"1\", x + 0.1, y + 0.53, 14);\r\n        }\r\n        if (collisionFlag & 2) {\r\n          this.render.drawRect(x + (1 - width), y, width, 1, color);\r\n          this.render.drawText(\"2\", x + 0.82, y + 0.53, 14);\r\n        }\r\n        if (collisionFlag & 4) {\r\n          this.render.drawRect(x, y, 1, width, color);\r\n          this.render.drawText(\"4\", x + 0.49, y + 0.2, 14);\r\n        }\r\n        if (collisionFlag & 8) {\r\n          this.render.drawRect(x, y + (1 - width), 1, width, color);\r\n          this.render.drawText(\"8\", x + 0.49, y + 0.92, 14);\r\n        }\r\n      }\r\n    }\r\n\r\n    var tileKeys = Object.keys(this.player.tiles);\r\n    for (var i = 0; i < tileKeys.length; i++) {\r\n      var tile = tileKeys[i];\r\n      var collisionFlag = this.player.tiles[tile];\r\n      var [x, y] = this.convertIndexToCoordinates(tile);\r\n      if (collisionFlag & 1) {\r\n        this.render.drawRect(x, y, 0.05, 1, \"#fff\");\r\n      }\r\n      if (collisionFlag & 2) {\r\n        this.render.drawRect(x + 0.95, y, 0.05, 1, \"#fff\");\r\n      }\r\n      if (collisionFlag & 4) {\r\n        this.render.drawRect(x, y, 1, 0.05, \"#fff\");\r\n      }\r\n      if (collisionFlag & 8) {\r\n        this.render.drawRect(x, y + 0.95, 1, 0.05, \"#fff\");\r\n      }\r\n    }\r\n\r\n    this.particleSystem.render();\r\n  }\r\n\r\n  updateGame(delta) {\r\n    this.fpsTick += delta;\r\n    if (this.fpsTick > 0.5) {\r\n      this.fpsTick = 0;\r\n\r\n      this.fps = Math.floor(1 / delta);\r\n    }\r\n\r\n    this.spawnTick += delta;\r\n    if (this.spawnTick > 2) {\r\n      this.spawnTick = 0;\r\n\r\n      this.spawnEntity();\r\n    }\r\n\r\n    this.controller.update(delta);\r\n\r\n    var deleteUUIDs = [];\r\n\r\n    for (var entityUUID in this.entities) {\r\n      var entity = this.entities[entityUUID];\r\n\r\n      entity.update(delta);\r\n\r\n      if (entity.delete) {\r\n        deleteUUIDs.push(entityUUID);\r\n      }\r\n    }\r\n\r\n    for (var entityUUID of deleteUUIDs) {\r\n      delete this.entities[entityUUID];\r\n    }\r\n\r\n    this.player.update(delta);\r\n    this.particleSystem.update(delta);\r\n    this.camera.update(delta);\r\n  }\r\n}\r\n","const SpriteSheets = {\r\n  player_idle: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/idle/1.png\",\r\n    max: 7,\r\n  },\r\n  player_run: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/run/1.png\",\r\n    max: 8,\r\n  },\r\n  player_jump: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/jump/1.png\",\r\n    max: 3,\r\n  },\r\n  player_land: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/land/1.png\",\r\n    max: 2,\r\n  },\r\n  player_slide: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/slide/1.png\",\r\n    max: 4,\r\n  },\r\n  player_roll: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/roll/1.png\",\r\n    max: 10,\r\n  },\r\n  player_combat_combo_01_attack_01: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_01/1.png\",\r\n    max: 6,\r\n  },\r\n  player_combat_combo_01_attack_02: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_02/1.png\",\r\n    max: 5,\r\n  },\r\n  player_combat_combo_01_attack_03: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_03/1.png\",\r\n    max: 4,\r\n  },\r\n  player_combat_combo_01_attack_04: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_combo_01_attack_04/1.png\",\r\n    max: 9,\r\n  },\r\n  player_combat_ground_slam: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/combat_ground_slam/1.png\",\r\n    max: 10,\r\n  },\r\n  player_look_up: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/look_up/1.png\",\r\n    max: 3,\r\n  },\r\n  player_knockback: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/knockback/1.png\",\r\n    max: 6,\r\n  },\r\n  player_ledge_climb: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/ledge_climb/1.png\",\r\n    max: 8,\r\n  },\r\n  player_ledge_hang: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/ledge_hang/1.png\",\r\n    max: 6,\r\n  },\r\n  player_wall_jump: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/wall_jump/1.png\",\r\n    max: 11,\r\n  },\r\n  player_wall_slide: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/wall_slide/1.png\",\r\n    max: 6,\r\n  },\r\n  player_crouch: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/crouch/1.png\",\r\n    max: 6,\r\n  },\r\n  player_crawl: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/crawl/1.png\",\r\n    max: 8,\r\n  },\r\n  player_front_flip: {\r\n    type: \"increment_file_name\",\r\n    imgPath: \"pixel_platformer_player/front_flip/1.png\",\r\n    max: 14,\r\n  },\r\n};\r\n\r\nexport default SpriteSheets;\r\n","import { useEffect, useRef, useState } from \"react\";\nimport Game from \"./Game\";\nimport SpriteSheets from \"./data/SpriteSheets\";\nimport SpriteSheetManager from \"./SpriteSheetManager\";\nimport SpriteSheet from \"./SpriteSheet\";\n\nfunction App() {\n  var canvasRef = useRef();\n\n  /**\n   * Show menu\n   */\n  var [menu, setMenu] = useState(false);\n  var gameRef = useRef();\n\n  useEffect(() => {\n    var ssm = new SpriteSheetManager();\n\n    Object.keys(SpriteSheets).forEach((spriteSheetName) => {\n      var data = SpriteSheets[spriteSheetName];\n      ssm.addSpriteSheet(spriteSheetName, data.imgPath, data);\n    });\n\n    /**\n     * @type {HTMLCanvasElement}\n     */\n    var canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    var ctx = canvas.getContext(\"2d\");\n\n    var last = performance.now();\n\n    var game = new Game(canvas, ctx, ssm);\n    gameRef.current = game;\n\n    window.game = game;\n\n    var cb = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      canvas.style.width = window.innerWidth + \"px\";\n      canvas.style.height = window.innerHeight + \"px\";\n\n      game.camera.updateAspectRatio();\n    };\n    cb();\n    var active = true;\n    game.active = true;\n\n    function update() {\n      var now = performance.now();\n      var delta = (now - last) / 1000;\n      last = now;\n\n      if (delta > 0.25) {\n        delta = 0.25;\n      }\n\n      ctx.fillStyle = \"#000\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n      if (game.active) {\n        game.updateGame(delta);\n      }\n      game.renderGame(delta);\n\n      active && requestAnimationFrame(update);\n    }\n\n    ssm.onLoaded = () => {\n      Object.keys(ssm.spriteSheets).forEach((key) => {\n        if (key.includes(\"player_\")) {\n          ssm.spriteSheets[key].getEffects([\"flipHorizontally\"]);\n        }\n      });\n\n      update();\n\n      setTimeout(() => {\n        game.start();\n        // setMenu(true);\n      }, 100);\n    };\n\n    window.addEventListener(\"resize\", cb);\n\n    return () => {\n      cancelAnimationFrame(update);\n      window.removeEventListener(\"resize\", cb);\n\n      active = false;\n\n      game.end();\n    };\n  }, []);\n\n  return (\n    <div className={!menu ? \"hide-cursor\" : \"\"}>\n      <div className={\"main-menu\" + (menu ? \" main-menu-show\" : \"\")}>\n        <h1>Platformer</h1>\n        <p>by: MichaelXF</p>\n\n        <button\n          className='main-btn'\n          onClick={() => {\n            // Start game\n            setMenu(false);\n          }}\n        >\n          Play\n        </button>\n      </div>\n\n      <canvas ref={canvasRef} />\n\n      <div className='controls'>\n        <kbd>W</kbd>\n        <kbd>A</kbd>\n        <kbd>S</kbd>\n        <kbd>D</kbd>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}